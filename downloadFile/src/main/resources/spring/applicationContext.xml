<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd">

	<bean id="propertyConfigurer" class="com.config.ContextPropertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath:spring/db-config.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath:spring/applicationContext-service*.xml" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<!-- 老数据 -->
		<!--<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/> -->
		<!-- 新数据 -->
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<property name="user" value="${db.user}"></property>
		<property name="password" value="${db.password}" />
		<property name="minPoolSize" value="${db.minPoolSize}" />
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<property name="maxIdleTime" value="${db.maxIdleTime}" />
		<property name="acquireIncrement" value="${db.acquireIncrement}" />
		<property name="maxStatements" value="${db.maxStatements}" />
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${db.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${db.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${db.breakAfterAcquireFailure}" />
		<!-- <property name="testConnectionOnCheckout" value="${db.testConnectionOnCheckout}" 
			/> -->
		<property name="preferredTestQuery">
			<value>SELECT 1</value>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <bean id="sqlSessionFactory" class="com.config.MultiConfigSqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="configLocations" 
		value="classpath:mybatis/config.xml" /> <property name="mapperLocations" 
		value="classpath:mybatis/web/*.xml" /> </bean> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/config.xml" />
	</bean>

	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.web.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- <bean id="dynamicLoadBean" class="com.config.DynamicLoadBean"> </bean> -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.web.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>


</beans>
